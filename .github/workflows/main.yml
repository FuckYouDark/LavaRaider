name: Nuitka tests
# makes little sense, spell-checker: disable
on:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.10', '3.11', '3.12']
    name: Ubuntu Python ${{ matrix.python_version }}
    steps:
      - name: 🛎️ | Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 | Use Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: 🧳 | Install Nuitka and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install patchelf gdb ccache libfuse2
          pip install --no-python-version-warning --disable-pip-version-check nuitka
          python -m pip install --no-python-version-warning --disable-pip-version-check -r requirements.txt
          python -m pip install --no-python-version-warning --disable-pip-version-check .
        working-directory: .

      - name: 📂 | Print working directory
        run: cd . && pwd

      - name: 📂 | List directory contents
        run: ls -R
        working-directory: .

      - name: 📜 | List environment variables
        run: |
          env | sort
        working-directory: .
      
      - name: 📦 | Run Nuitka
        run: |
          python -m nuitka --version
          python -m nuitka --onefile --windows-icon-from-ico=icon.ico --follow-imports --assume-yes-for-downloads --output-dir=build main.py
        working-directory: .

      - name: 🗃️ | Upload working dir
        uses: actions/upload-artifact@v4
        with:
          name: Ubuntu Python ${{ matrix.python_version }}
          path: |
            build/**
            .
  mac-python3:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.10', '3.11', '3.12']
    name: macOS Python ${{ matrix.python_version }}
    steps:
      - name: 🛎️ | Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 | Use Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: ☄️ | Verbose installation output for Python
        run: |
          set -x
          which python
          otool -L $(which python)
          otool -l $(which python)
          ls -lR $(dirname $(dirname $(which python)))
        working-directory: .

      - name: 🧳 | Install Nuitka and dependencies
        run: |
          pip install --no-python-version-warning --disable-pip-version-check nuitka
          pip install --no-python-version-warning --disable-pip-version-check -r requirements.txt
          pip install --no-python-version-warning --disable-pip-version-check .
        working-directory: .

      - name: 📂 | Print working directory
        run: cd . && pwd

      - name: 📂 | List directory contents
        run: ls -R
        working-directory: .

      - name: 📜 | List environment variables
        run: |
          env | sort
        working-directory: .

      - name: 📦 | Run Nuitka
        run: |
          python -m nuitka --version
          python -m nuitka --onefile --windows-icon-from-ico=icon.ico --follow-imports --assume-yes-for-downloads --output-dir=build main.py
        working-directory: .

      - name: 🗃️ | Upload working dir
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Python ${{ matrix.python_version }} Build
          path: |
            build/**
            .
  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python_version: ['3.10', '3.11', '3.12']
    name: Windows Python ${{ matrix.python_version }}
    steps:
      - uses: ilammy/msvc-dev-cmd@v1

      - name: 🛎️ | Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🐍 | Use Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: 🧳 | Install Nuitka and dependencies
        run: |
          pip install --no-python-version-warning --disable-pip-version-check nuitka
          pip install --no-python-version-warning --disable-pip-version-check -r requirements.txt
          pip install --no-python-version-warning --disable-pip-version-check .
        working-directory: .

      - name: 📂 | Print working directory
        run: cd . && pwd

      - name: 📂 | List directory contents
        run: ls -R
        working-directory: .

      - name: 📜 | List environment variables
        run: |
          Get-ChildItem env:
        working-directory: .

      - name: 📦 | Run Nuitka
        run: |
          python -m nuitka --version
          python -m nuitka --onefile --windows-icon-from-ico=icon.ico --follow-imports --assume-yes-for-downloads --output-dir=build main.py
        working-directory: .

      - name: 🗃️ | Upload working dir
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }} Python ${{ matrix.python_version }} Build
          path: |
            build/**
            .