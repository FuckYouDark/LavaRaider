name: Nuitka tests
# makes little sense, spell-checker: disable
on:
  pull_request:
    branches:
      - develop
  push:
    branches:
      - main
      - develop
      - factory
      - release/**
      - hotfix/**

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        python_version:
            - '3.10'
            - '3.11'
            - '3.12'
    name: Ubuntu Python ${{ matrix.python_version }}
    steps:
      - name: üõéÔ∏è Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Use Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: üß≥ Install Nuitka and dependencies
        run: |
          sudo apt-get update
          sudo apt-get install patchelf gdb ccache libfuse2
          pip install --no-python-version-warning --disable-pip-version-check nuitka
          python -m pip install --no-python-version-warning --disable-pip-version-check -r requirements.txt
          python -m pip install --no-python-version-warning --disable-pip-version-check .
        working-directory: .

      - name: Verbose scons output in compilation
        run: |
          python -m nuitka --module --show-scons --run --report=compilation-report-module.xml --experimental=debug-report-traceback main.py
          python -m nuitka --show-scons --run --report=compilation-report-exe.xml --experimental=debug-report-traceback main.py
        working-directory: .

      - name: Archive compilation reports for empty modules
        uses: actions/upload-artifact@v3
        with:
          name: compilation-reports
          path: |
            *.xml

      - name: Print working directory üìÇ
        run: cd . && pwd

      - name: List directory contents
        run: ls -R
        working-directory: .

      - name: Run Nuitka
        run: |
          python -m nuitka --version
          env | sort
          python -m nuitka --onefile --assume-yes-for-downloads main.py
        working-directory: .

  mac-python3:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python_version:
            - '3.10'
            - '3.11'
            - '3.12'
    name: macOS Python ${{ matrix.python_version }}
    steps:
      - name: üõéÔ∏è Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üêç Use Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: Verbose installation output for üêç Python
        run: |
          set -x
          which python
          otool -L $(which python)
          otool -l $(which python)
          ls -lR $(dirname $(dirname $(which python)))
        working-directory: .

      - name: üß≥ Install Nuitka and dependencies
        run: |
          pip install --no-python-version-warning --disable-pip-version-check nuitka
          pip install --no-python-version-warning --disable-pip-version-check -r requirements.txt
          pip install --no-python-version-warning --disable-pip-version-check .
        working-directory: .

      - name: Verbose scons output in compilation
        run: |
          python -m nuitka --module --show-scons --run --assume-yes-for-downloads main.py
          python -m nuitka --show-scons --run --assume-yes-for-downloads main.py
        working-directory: .

      - name: Archive compilation reports for empty modules
        uses: actions/upload-artifact@v3
        with:
          name: compilation-reports
          path: |
            *.xml

      - name: Print working directory üìÇ
        run: cd . && pwd

      - name: List directory contents
        run: ls -R
        working-directory: .

      - name: Run Nuitka
        run: |
          python -m nuitka --version
          env | sort
          python -m nuitka --onefile --assume-yes-for-downloads main.py
        working-directory: .

  windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python_version:
            - '3.10'
            - '3.11'
            - '3.12'
    name: Windows Python ${{ matrix.python_version }}
    steps:
      - uses: actions/checkout@v4

      - uses: ilammy/msvc-dev-cmd@v1

      - name: Use Python ${{ matrix.python_version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python_version }}

      - name: üß≥ Install Nuitka and dependencies
        run: |
          pip install --no-python-version-warning --disable-pip-version-check nuitka
          pip install --no-python-version-warning --disable-pip-version-check -r requirements.txt
          pip install --no-python-version-warning --disable-pip-version-check .
        working-directory: .

      - name: Verbose scons output in compilation
        run: |
          python -m nuitka --module --show-scons --run --assume-yes-for-downloads main.py
          python -m nuitka --show-scons --run main.py
        working-directory: .

      - name: Print working directory üìÇ
        run: cd . && pwd

      - name: List directory contents
        run: ls -R
        working-directory: .

      - name: Run Nuitka
        run: |
          Get-ChildItem env:
          python -m nuitka --version
          python -m nuitka --onefile --assume-yes-for-downloads main.py
        working-directory: .
